import { ICoordinatesRegExps } from "./CoordinatesRegExps.interface";

export class CoordinatesRegExpsModel implements ICoordinatesRegExps {
  readonly str: string
  public strictRegExps: RegExp[] = []
  public partialRegExps: RegExp[] = [
    /[0-9]{1,3}[°]{0,1}[0-9]{1,2}[′]{1}[0-9]{1,2}[,][0-9]{1,10}[″]{1}[NSСЮEWЗВ]{1}[,]/,
    /[0-9]{1,3}[°]{0,1}[0-9]{1,2}[′]{1}[0-9]{1,2}[,][0-9]{1,10}[″]{1}[NSСЮEWЗВ]{1}/,
    /[0-9]{1,3}[°]{0,1}[0-9]{1,2}[′]{1}[0-9]{1,2}[.][0-9]{1,10}[″]{1}[NSСЮEWЗВ]{1}[,]/,
    /[0-9]{1,3}[°]{0,1}[0-9]{1,2}[′]{1}[0-9]{1,2}[.][0-9]{1,10}[″]{1}[NSСЮEWЗВ]{1}/,
    /[0-9]{1,3}[°]{0,1}[0-9]{1,2}[′]{1}[0-9]{1,2}[″]{1}[NSСЮEWЗВ]{1}[,]/,
    /[0-9]{1,3}[°]{0,1}[0-9]{1,2}[′]{1}[0-9]{1,2}[″]{1}[NSСЮEWЗВ]{1}/,
    /[0-9]{1,3}[°]{0,1}[0-9]{1,2}[′][NSСЮEWЗВ]{1}[,]/,
    /[0-9]{1,3}[°]{0,1}[0-9]{1,2}[′][NSСЮEWЗВ]{1}/,
    /[0-9]{1,3}[°][NSСЮEWЗВ]{1}[,]/,
    /[0-9]{1,3}[°][NSСЮEWЗВ]{1}/,
    /[0-9]{1,6}[NSСЮ]{1}[0-9]{1,7}[EWЗВ]{1}/,
    /[0-9]{6,7}[.]{1}[0-9]{1,7}[NSСЮEWЗВ]{1}[,]/,
    /[0-9]{6,7}[.]{1}[0-9]{1,7}[NSСЮEWЗВ]{1}/,
    /[0-9]{1,7}[NSСЮEWЗВ]{1}[,]/,
    /[0-9]{1,7}[NSСЮEWЗВ]{1}/,
    /[NSСЮEWЗВ]{1}[0-9]{1,3}[.][0-9]{1,10}[°][,]/,
    /[NSСЮEWЗВ]{1}[0-9]{1,3}[.][0-9]{1,10}[°]/,
    /[NSСЮEWЗВ]{1}[0-9]{1,3}[°][,]/,
    /[NSСЮEWЗВ]{1}[0-9]{1,3}[°]/,
    /[0-9]{1,3}[,][0-9]{1,10}[°]{1}[,]/,
    /[0-9]{1,3}[,][0-9]{1,10}[°]{1}/,
    /[0-9]{1,3}[°]{1}[,]/,
    /[0-9]{1,3}[°]{1}/,
  ]

  constructor(str: string) {
    this.str = str
    this.partialRegExps.forEach((exp: RegExp) => {
      this.strictRegExps.push(new RegExp('^' + String(exp).slice(1, -1) + '$'))
    })
  }
}
